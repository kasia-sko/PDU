summarise(mean_monthly_temp = mean(temperature_2m_mean...C.), monthly_min_temp = min(temperature_2m_min...C.),
monthly_max_temp = max(temperature_2m_max...C.), monthly_amplitude = monthly_max_temp - monthly_min_temp,
montly_precipitate_sum = (sum(rain_sum..mm.) + sum(snowfall_sum..cm.))/10,
mean_monthly_dayligth_duration = mean(daylight_duration..s.)/3600,  mean_monthly_sunshine_duration = mean(sunshine_duration..s.)/3600) %>%
as.data.frame()
colnames(dane_miesieczne)[3] <- "country_name"
# liczymy dane roczne
dane_roczne <- dane_miesieczne %>%
group_by(location_id, country_name) %>%
summarise(mean_temp_year = mean(mean_monthly_temp), warmest_month = max(mean_monthly_temp), coldest_month = min(mean_monthly_temp), maks_aplitude = max(monthly_amplitude),
max_max_temp = max(monthly_max_temp), min_min_temp = min(monthly_min_temp), year_precipitate_sum = sum(montly_precipitate_sum),
year_mean_dayligth = mean(mean_monthly_dayligth_duration), year_mean_sunshine_duration = mean(mean_monthly_sunshine_duration)) %>% as.data.frame()
# łączymy dane roczne z indeksem szczęścia
pogodaIndeks <- dane_roczne %>%
inner_join(Indeks[c("CountryName", "LadderScore")], by = c("country_name" ="CountryName"))
# dodajemy kontynenty
pogodaIndeks <- pogodaIndeks %>%
inner_join(Kontynenty[c("Entity", "Countries.Continents")], by = c("country_name" = "Entity")) %>%
rename(Continents = Countries.Continents)
migracje <- read.csv("migracje.csv", fileEncoding = "Windows-1250")
migracje
nazwyKrajow <- read.csv("countries.csv")
head(nazwyKrajow,20)
nazwyKrajow$pl
srednie_migracje <- migracje %>%
group_by(Nazwa) %>%
summarise(srednia_emigracja = mean(c(EMI16, EMI17, EMI18, EMI19,EMI20, EMI21, EMI22), na.rm = TRUE),
srednie_saldo = mean(c(SALDO16,SALDO17, SALDO18, SALDO19, SALDO20, SALDO21, SALDO22), na.rm = TRUE))%>% as.data.frame()
srednie_migracje
migracje_pogodowe <- srednie_migracje %>%
inner_join(pogodaIndeks, by = c("Nazwa" = "country_name"))
head(migracje_pogodowe)
source("C:/Users/Kasia/Desktop/PDU/PracaDomowa2/daneNorwegia.R", echo=TRUE)
source("C:/Users/Kasia/Desktop/PDU/PracaDomowa2/Wykresy.R", echo=TRUE)
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color=Continents, shape=Continents) ) +  geom_point()
Kontynenty <- read.csv("Kontynenty.csv")
source("C:/Users/Kasia/Desktop/PDU/PracaDomowa2/Pogoda_Indeks.R", echo=TRUE)
library(ggplot2)
install.packages("plotly")
library(plotly)
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = year_mean_sunshine_duration, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = maks_aplitude, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = max_max_temp, color=Continents, shape=Continents) ) +  geom_point()
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = year_mean_sunshine_duration, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = maks_aplitude, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = max_max_temp, color=Continents, shape=Continents) ) +  geom_point()
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
correlation <- cor(pogodaIndeks$LadderScore, pogodaIndeks$mean_temp_year)
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
labs(x = "Srednia Emigracja (log scale)", y = "Mean Temperature Year", color = "Continents", shape = "Continents") +
theme_minimal()
View(Kontynenty)
runApp('aplikcja1/indeksWykresyShiny.R')
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = year_mean_sunshine_duration, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = maks_aplitude, color=Continents, shape=Continents) ) +  geom_point()
ggplot(pogodaIndeks, aes(x = LadderScore, y = max_max_temp, color=Continents, shape=Continents) ) +  geom_point()
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color=Continents, shape=Continents) ) +  geom_point()
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
labs(x = "Srednia Emigracja (log scale)", y = "Mean Temperature Year", color = "Continents", shape = "Continents") +
theme_minimal()
View(migracje_pogodowe)
migracje <- read.csv("migracje.csv", fileEncoding = "Windows-1250")
migracje
nazwyKrajow <- read.csv("countries.csv")
head(nazwyKrajow,20)
nazwyKrajow$pl
srednie_migracje <- migracje %>%
group_by(Nazwa) %>%
summarise(srednia_emigracja = mean(c(EMI16, EMI17, EMI18, EMI19,EMI20, EMI21, EMI22), na.rm = TRUE),
srednie_saldo = mean(c(SALDO16,SALDO17, SALDO18, SALDO19, SALDO20, SALDO21, SALDO22), na.rm = TRUE))%>% as.data.frame()
srednie_migracje
migracje_pogodowe <- srednie_migracje %>%
inner_join(pogodaIndeks, by = c("Nazwa" = "country_name"))
head(migracje_pogodowe)
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
labs(x = "Srednia Emigracja (log scale)", y = "Mean Temperature Year", color = "Continents", shape = "Continents") +
theme_minimal()
# wykres ilosci emigrujacych ludzi od temperatury
migracje_pogodowe$mean_temp_category <- cut(migracje_pogodowe$mean_temp_year,
breaks = c(-10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40),
labels = c("-10- -5", "-5-0", "0-5", "5-10", "10-15", "15-20", "20-25", "25-30", "30-35", "35-40"))
migracje_pogodowe11 <- migracje_pogodowe %>%
group_by(mean_temp_category) %>%
summarise(ilosc_ludzi = sum(srednia_emigracja)) %>% as.data.frame()
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi)) +
geom_bar(stat = "identity") +
labs(title = "Barplot of People Count by Mean Temperature Category",
x = "Mean Temperature Category (°C)",
y = "People Count") +
theme_minimal()
runApp('aplikcja1/indeksWykresyShiny.R')
turystyka <- read.csv("turystyka")
turystyka <- read.csv("turystyka.csv")
turystyka
turystyka <- read.csv("turystyka.csv")
turystyka
turystyka <- read.csv("turystyka.csv")
View(turystyka)
View(turystyka)
View(turystyka)
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka
tail(turystyka)
colnames(turystyka)
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv",  header = TRUE, sep = ",", quote = "\"", check.names = FALSE)
turystyka <- read.csv("turystyka.csv", row.names = 1)
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka
colnames(turystyka)[1] <- CountryName
colnames(turystyka)[1] <- "CountryName"
turystyka
colnames(turystyka)
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka
turystyka <- read.csv("turystyka.csv", header = TRUE, sep = ",", quote = "\"", check.names = FALSE)
correct_column_names <- c("CountryName", "CountryCode", "IndicatorName", "IndicatorCode",
"X1960", "X1961", "X1962", "X1963", "X1964", "X1965", "X1966", "X1967",
"X1968", "X1969", "X1970", "X1971", "X1972", "X1973", "X1974", "X1975",
"X1976", "X1977", "X1978", "X1979", "X1980", "X1981", "X1982", "X1983",
"X1984", "X1985", "X1986", "X1987", "X1988", "X1989", "X1990", "X1991",
"X1992", "X1993", "X1994", "X1995", "X1996", "X1997", "X1998", "X1999",
"X2000", "X2001", "X2002", "X2003", "X2004", "X2005", "X2006", "X2007",
"X2008", "X2009", "X2010", "X2011", "X2012", "X2013", "X2014", "X2015",
"X2016", "X2017", "X2018", "X2019", "X2020", "X2021", "X2022", "X2023")
correct_column_names <- sub("^X", "", correct_column_names)
correct_column_names
colnames(turystyka) <- correct_column_names
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka$X1960
turystyka$X1961
turystyka <- read.csv("turystyka.csv", header = TRUE, sep = ",", quote = "\"", stringsAsFactors = FALSE)
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka
View(turystyka)
View(turystyka)
View(turystyka)
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv", row.names = NULL)
View(turystyka)
View(turystyka)
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv", row.names = NULL)
View(turystyka)
turystyka <- read.csv("turystyka.csv")
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
correct_column_names <- c("CountryName", "CountryCode", "IndicatorName", "IndicatorCode",
"X1960", "X1961", "X1962", "X1963", "X1964", "X1965", "X1966", "X1967",
"X1968", "X1969", "X1970", "X1971", "X1972", "X1973", "X1974", "X1975",
"X1976", "X1977", "X1978", "X1979", "X1980", "X1981", "X1982", "X1983",
"X1984", "X1985", "X1986", "X1987", "X1988", "X1989", "X1990", "X1991",
"X1992", "X1993", "X1994", "X1995", "X1996", "X1997", "X1998", "X1999",
"X2000", "X2001", "X2002", "X2003", "X2004", "X2005", "X2006", "X2007",
"X2008", "X2009", "X2010", "X2011", "X2012", "X2013", "X2014", "X2015",
"X2016", "X2017", "X2018", "X2019", "X2020", "X2021", "X2022", "X2023")
correct_column_names <- sub("^X", "", correct_column_names)
correct_column_names
colnames(turystyka) <- correct_column_names
turystyka
turystyka <- read.csv("turystyka.csv")
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka
turystyka <- turystyka[ , c("CountryName", "CountryCode", "IndicatorName", "IndicatorCode",
"2014", "2015", "2016", "2017", "2018", "2019")]
turystyka <- turystyka[c("CountryName", "2014", "2015", "2016", "2017", "2018", "2019"),]
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "2014", "2015", "2016", "2017", "2018", "2019")]
selected_columns <- c("CountryName", "CountryCode", "IndicatorName", "IndicatorCode",
"2014", "2015", "2016", "2017", "2018", "2019")
# Wybór kolumn z danych
turystyka_selected <- turystyka[, selected_columns]
correct_column_names <- c("CountryName", "CountryCode", "IndicatorName", "IndicatorCode",
"X1960", "X1961", "X1962", "X1963", "X1964", "X1965", "X1966", "X1967",
"X1968", "X1969", "X1970", "X1971", "X1972", "X1973", "X1974", "X1975",
"X1976", "X1977", "X1978", "X1979", "X1980", "X1981", "X1982", "X1983",
"X1984", "X1985", "X1986", "X1987", "X1988", "X1989", "X1990", "X1991",
"X1992", "X1993", "X1994", "X1995", "X1996", "X1997", "X1998", "X1999",
"X2000", "X2001", "X2002", "X2003", "X2004", "X2005", "X2006", "X2007",
"X2008", "X2009", "X2010", "X2011", "X2012", "X2013", "X2014", "X2015",
"X2016", "X2017", "X2018", "X2019", "X2020", "X2021", "X2022", "X2023")
selected_columns <- c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")
# Wybór kolumn z danych
turystyka_selected <- turystyka[, selected_columns]
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka
library(dplyr)
View(pogodaIndeks)
View(pogodaIndeks)
turysci <- turystyka %>%
inner_join(pogodaIndeks, by = c("country_name" = "CountryName"))
turysci <- turystyka %>%
inner_join(pogodaIndeks, by = c("CountryName" = "country_name"))
turysci
turystyka <- turystyka %>%
mutate(mean_tourists_sum = mean("X2014", "X2015", "X2016", "X2017", "X2018", "X2019"))
mutate(mean_tourists_sum = mean(turystyka$X2014", turystyka$X2015, turystyka$X2016, turystyka$X2017, turystyka$X2018, turystyka$X2019))
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
mutate(mean_tourists_sum = mean(turystyka$X2014, turystyka$X2015, turystyka$X2016, turystyka$X2017, turystyka$X2018, turystyka$X2019))
turystyka <- turystyka %>%
mutate(mean_tourists_sum = mean(c(turystyka$X2014, turystyka$X2015, turystyka$X2016, turystyka$X2017, turystyka$X2018, turystyka$X2019)))
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
group_by("CountryName") %>%
mutate(mean_tourists_sum = mean(c(turystyka$X2014, turystyka$X2015, turystyka$X2016, turystyka$X2017, turystyka$X2018, turystyka$X2019)))
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
group_by("CountryName") %>%
mutate(mean_tourists_sum = mean(c(turystyka$X2014, turystyka$X2015, turystyka$X2016, turystyka$X2017, turystyka$X2018, turystyka$X2019), na.rm = TRUE)) %>%
as.data.frame()
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
group_by(CountryName) %>%
mutate(mean_tourists_sum = mean(c(turystyka$X2014, turystyka$X2015, turystyka$X2016, turystyka$X2017, turystyka$X2018, turystyka$X2019), na.rm = TRUE)) %>%
as.data.frame()
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
group_by(CountryName) %>%
summarise(mean_tourists_sum = mean(c(turystyka$X2014, turystyka$X2015, turystyka$X2016, turystyka$X2017, turystyka$X2018, turystyka$X2019), na.rm = TRUE)) %>%
as.data.frame()
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
group_by(CountryName) %>%
summarise(mean_tourists_sum = mean(c(X2014, X2015,X2016, X2017, X2018, X2019), na.rm = TRUE)) %>%
as.data.frame()
turystyka
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka
turystyka <- turystyka %>%
group_by(CountryName) %>%
summarise(mean_tourists_sum = mean(c(X2014, X2015,X2016, X2017, X2018, X2019), na.rm = TRUE)) %>%
as.data.frame()
turystyka
View(turystyka)
turysci <- turystyka %>%
inner_join(pogodaIndeks, by = c("CountryName" = "country_name"))
turysci
turystyka <- na.omit(turystyka)
turystyka
turysci <- turystyka %>%
inner_join(pogodaIndeks, by = c("CountryName" = "country_name"))
turysci
?cor
library(shiny); runApp('aplikcja1/indeksWykresyShiny.R')
ggplot(pogodaIndeks, aes(x = mean_tourists_sum, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
ggplot(turysci, aes(x = mean_tourists_sum, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
ggplot(turysci, aes(x = mean_tourists_sum, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
correlation <- cor(turysci$mean_tourists_sum, turysci$mean_temp_year)
correlation
correlation <- cor(turysci$mean_tourists_sum, turysci$mean_temp_year, methon = "spearman")
correlation <- cor(turysci$mean_tourists_sum, turysci$mean_temp_year, method = "spearman")
correlation
ggplot(turysci, aes(x = mean_tourists_sum, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "Mean tourits sum in a year",
y = "Mean Temp Year")
ggplot(turysci, aes(x = mean_tourists_sum, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "Mean tourists sum in a year",
y = "Mean Temp Year")
correlation1 <- cor(turysci$mean_tourists_sum, turysci$mean_temp_year, method = "spearman")
correlation1 <- cor(turysci$mean_tourists_sum, turysci$mean_temp_year)
correlation1
ggplot(turysci, aes(x = mean_tourists_sum, y = year_mean_sunshine_duration, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "Mean tourists sum in a year",
y = "Mean sunshine")
correlation <- cor(turysci$mean_tourists_sum, turysci$year_mean_sunshine_duration, method = "spearman")
correlation
correlation1 <- cor(turysci$mean_tourists_sum, turysci$year_mean_sunshine_duration)
correlation1
plot_ly(data = turysci,
y = ~mean_temp_year,
x = ~mean_tourists_sum,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>Mean tourists sum in a year:',mean_tourists_sum , '<br>Mean temp:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of tourists vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
plot_ly(data = turysci,
y = ~mean_temp_year,
x = ~mean_tourists_sum,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', CountryName, '<br>Mean tourists sum in a year:',mean_tourists_sum , '<br>Mean temp:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of tourists vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
plot_ly(data = turysci,
y = ~mean_temp_year,
x = ~mean_tourists_sum,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', CountryName, '<br>Mean tourists sum in a year:',mean_tourists_sum , '<br>Mean temp:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'tourist', type = "log"),
title = 'Scatter Plot of tourists vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
ggplot(turysci, aes(x = mean_tourists_sum, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "Mean tourists sum in a year",
y = "Mean Temp Year")
plot_ly(data = turysci,
y = ~mean_temp_year,
x = ~mean_tourists_sum,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', CountryName, '<br>Mean tourists sum in a year:',mean_tourists_sum , '<br>Mean temp:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'tourist', type = "log"),
title = 'Scatter Plot of tourists vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
ggplot(turysci, aes(x = mean_tourists_sum, y = year_mean_sunshine_duration, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "Mean tourists sum in a year",
y = "Mean sunshine")
View(pogodaIndeks)
View(pogodaIndeks)
test <- pogodaIndeks %>%
mutate(temprain = mean_temp_year/ year_precipitate_sum)
test
plot_ly(data = test,
y = ~temprain,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>temprain:', round(temprain, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
#########################################################################################
test <- pogodaIndeks %>%
mutate(temprain = mean_temp_year/ year_precipitate_sum/12)
plot_ly(data = test,
y = ~temprain,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>temprain:', round(temprain, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
#########################################################################################
test <- pogodaIndeks %>%
mutate(temprain = mean_temp_year + year_mean_sunshine_duration)
plot_ly(data = test,
y = ~temprain,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>temprain:', round(temprain, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'test'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
correlation <- cor(test$LadderScore, test$temprain, method = "spearman")
correlation
correlation <- cor(test$LadderScore, test$temprain)
correlation
