matplot(1:365, cbind(polska_dlugosc_dnia$daylight_duration..s., svalbard_dl_dnia, olso_dl_dnia, lofoten_dl_dnia), type="l", col=c("#B43757", "#29AB87", "#6AAFc9", "#FFCC66"), lty=1,
xlab="Miesiąc", ylab="Długość dnia [s]", xaxt="n", lwd = 2)
months <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month_midpoints <- cumsum(months) - months / 2
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=0)
legend("bottom", c("Polska", "Svalbard", "Olso", "Lofoty"),
lty=1, col=c("#B43757","#29AB87", "#6AAFc9", "#FFCC66"), lwd = 2, bg="#F9F6D2")
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=0, lwd.ticks = 1)
plot.new()
matplot(1:365, cbind(polska_dlugosc_dnia$daylight_duration..s., svalbard_dl_dnia, olso_dl_dnia, lofoten_dl_dnia), type="l", col=c("#B43757", "#29AB87", "#6AAFc9", "#FFCC66"), lty=1,
xlab="Miesiąc", ylab="Długość dnia [s]", xaxt="n", lwd = 2)
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=0, lwd.ticks = 0)
legend("bottom", c("Polska", "Svalbard", "Olso", "Lofoty"),
lty=1, col=c("#B43757","#29AB87", "#6AAFc9", "#FFCC66"), lwd = 2, bg="#F9F6D2")
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=0, lwd.ticks = 1)
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=1, lwd.ticks = 1)
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=5, lwd.ticks = 1)
plot.new()
matplot(1:365, cbind(polska_dlugosc_dnia$daylight_duration..s., svalbard_dl_dnia, olso_dl_dnia, lofoten_dl_dnia), type="l", col=c("#B43757", "#29AB87", "#6AAFc9", "#FFCC66"), lty=1,
xlab="Miesiąc", ylab="Długość dnia [s]", xaxt="n", lwd = 2)
months <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month_midpoints <- cumsum(months) - months / 2
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=0, lwd.ticks = 1)
legend("bottom", c("Polska", "Svalbard", "Olso", "Lofoty"),
lty=1, col=c("#B43757","#29AB87", "#6AAFc9", "#FFCC66"), lwd = 2, bg="#F9F6D2")
d_polarne <- dni_polarne$ilosc
names(d_polarne) <- dni_polarne$city
plot.new()
barplot(d_polarne, col = "#FAB9FA", ylim = c(0,max(d_polarne)*1.2))
n_polarne <- noce_polarne$ilosc
n_polarne <- c("Bodo" = 0, n_polarne)
names(n_polarne)[c(2:6)] <- noce_polarne$city
barplot(n_polarne, col = adjustcolor("#B779B7", alpha.f = 0.5), add = TRUE)
legend("topright", c("dni polarne", "noce polarne"), pch = 16, pt.cex = 2, col=c("#FAB9FA","#B779B7"), bg="#F9F6D2")
# Dodanie wartości na słupkach
text(x = barplot(d_polarne, plot=FALSE), y = d_polarne, label = d_polarne, pos = 3, cex = 0.8, col = "black")
text(x = barplot(n_polarne, plot=FALSE), y = n_polarne, label = n_polarne, pos = 3, cex = 0.8, col = "black")
histogram <- ggplot(data = migracje_pogodowe, aes(x = mean_temp_year, y = srednia_emigracja)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7, width = 2) +  # Wyświetlenie słupków
labs(x = "Średnia temperatura", y = "Ilość osób emigrujących",  # Nadanie etykiet osiom
title = "Histogram średniej temperatury vs ilość osób emigrujących")  # Nadanie tytułu wykresowi
library(ggplot2)
histogram <- ggplot(data = migracje_pogodowe, aes(x = mean_temp_year, y = srednia_emigracja)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7, width = 2) +  # Wyświetlenie słupków
labs(x = "Średnia temperatura", y = "Ilość osób emigrujących",  # Nadanie etykiet osiom
title = "Histogram średniej temperatury vs ilość osób emigrujących")  # Nadanie tytułu wykresowi
histogram <- ggplot(data = migracje_pogodowe, aes(x = mean_temp_year, y = srednia_emigracja)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7, width = 2) +  # Wyświetlenie słupków
labs(x = "Średnia temperatura", y = "Ilość osób emigrujących",  # Nadanie etykiet osiom
title = "Histogram średniej temperatury vs ilość osób emigrujących")  # Nadanie tytułu wykresowi
# histogram with added parameters
hist(migracje_pogodowe$mean_temp_year,
main="Histogram",
xlab="Srednia temperatura",
col="darkmagenta",
freq=FALSE,
)
barplot(height = migracje_pogodowe$srednia_emigracja,
names.arg = migracje_pogodowe$mean_temp_category,
xlab = "Przedziały temperatur",
ylab = "Ilość osób emigrujących",
main = "Histogram przedziałów temperatur vs ilość osób emigrujących",
col = "lightblue", border = "black", space = 0.5)
migracje_pogodowe
head(migracje_pogodowe)
migracje_pogodowe$mean_temp_category <- cut(migracje_pogodowe$mean_temp_year,
breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40),
labels = c("0-5", "5-10", "10-15", "15-20", "20-25", "25-30", "30-35", "35-40"))
head(migracje_pogodowe)
barplot(height = migracje_pogodowe$srednia_emigracja,
names.arg = migracje_pogodowe$mean_temp_category,
xlab = "Przedziały temperatur",
ylab = "Ilość osób emigrujących",
main = "Histogram przedziałów temperatur vs ilość osób emigrujących",
col = "lightblue", border = "black", space = 0.5)
migracje_pogodowe11 <- migracje_pogodowe %>%
group_by(mean_temp_category) %>%
summarise(ilosc_ludzi = sum(srednia_emigracja))
library(dplyr)
migracje_pogodowe11 <- migracje_pogodowe %>%
group_by(mean_temp_category) %>%
summarise(ilosc_ludzi = sum(srednia_emigracja))
migracje_pogodowe11
migracje_pogodowe11 <- migracje_pogodowe %>%
group_by(mean_temp_category) %>%
summarise(ilosc_ludzi = sum(srednia_emigracja)) %>% as.data.frame()
migracje_pogodowe11
migracje_pogodowe$mean_temp_category <- cut(migracje_pogodowe$mean_temp_year,
breaks = c(-10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40),
labels = c("-10- -5", "-5-0", "0-5", "5-10", "10-15", "15-20", "20-25", "25-30", "30-35", "35-40"))
migracje_pogodowe11 <- migracje_pogodowe %>%
group_by(mean_temp_category) %>%
summarise(ilosc_ludzi = sum(srednia_emigracja)) %>% as.data.frame()
migracje_pogodowe11
barplot(migracje_pogodowe11, col = "red")
p2 <- nPlot(LadderScore ~ mean_temp_year, group = "Continents", data = pogodaIndeks, type = "scatterChart")
barplot(migracje_pogodowe11$mean_temp_category, col = "red")
migracje_pogodowe11$mean_temp_category
typeof(migracje_pogodowe11$mean_temp_category)
class(migracje_pogodowe11$mean_temp_category)
ggplot(data, aes(x = mean_temp_category, y = ilosc_ludzi)) +
geom_bar(stat = "identity") +
labs(title = "Barplot of People Count by Mean Temperature Category",
x = "Mean Temperature Category (°C)",
y = "People Count") +
theme_minimal()
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi)) +
geom_bar(stat = "identity") +
labs(title = "Barplot of People Count by Mean Temperature Category",
x = "Mean Temperature Category (°C)",
y = "People Count") +
theme_minimal()
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color=Continents, shape=Continents) ) +  geom_point()
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
labs(x = "Srednia Emigracja (log scale)", y = "Mean Temperature Year", color = "Continents", shape = "Continents") +
theme_minimal()
p2 <- nPlot(LadderScore ~ mean_temp_year, group = "Continents", data = pogodaIndeks, type = "scatterChart")
library(plotly)
p2 <- nPlot(LadderScore ~ mean_temp_year, group = "Continents", data = pogodaIndeks, type = "scatterChart")
library(plotly)
p2 <- nPlot(LadderScore ~ mean_temp_year, group = "Continents", data = pogodaIndeks, type = "scatterChart")
plot <- plot_ly(pogodaIndeks, x = ~mean_temp_year, y = ~LadderScore, type = 'scatter', mode = 'markers',
color = ~Continents, symbol = ~Continents) %>%
layout(
xaxis = list(type = "log", title = "Mean Temperature Year (log scale)"),
yaxis = list(type = "log", title = "Ladder Score (log scale)"),
title = "Interactive Scatter Plot with Logarithmic Scales"
)
# Display the plot
plot
library(shiny); runApp('aplikcja1/wykres1.R')
runApp('aplikcja1/wykres1.R')
plot <- plot_ly(pogodaIndeks, x = ~mean_temp_year, y = ~LadderScore, type = 'scatter', mode = 'markers',
color = ~Continents, symbol = ~Continents) %>%
layout(
xaxis = list(type = "log", title = "Mean Temperature Year (log scale)"),
yaxis = list(type = "log", title = "Ladder Score (log scale)"),
title = "Interactive Scatter Plot with Logarithmic Scales"
)
p2 <- plot_ly(data = pogodaIndeks,
y = ~mean_temp_year,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>Mean Temp Year:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
# Display the plot
p2
link <- api_create(p2, filename = "moj_wykres", sharing = "public")
rsconnect::deployApp("C:\\Users\\Kasia\\Desktop\\PDU\\PracaDomowa2\\aplikcja1")
p2 <- nPlot(LadderScore ~ mean_temp_year, group = "Continents", data = pogodaIndeks, type = "scatterChart")
#ok!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
plot <- plot_ly(pogodaIndeks, x = ~mean_temp_year, y = ~LadderScore, type = 'scatter', mode = 'markers',
color = ~Continents, symbol = ~Continents) %>%
layout(
xaxis = list(type = "log", title = "Mean Temperature Year (log scale)"),
yaxis = list(type = "log", title = "Ladder Score (log scale)"),
title = "Interactive Scatter Plot with Logarithmic Scales"
)
# Display the plot
plot
#ok!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11
p2 <- plot_ly(data = pogodaIndeks,
y = ~mean_temp_year,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>Mean Temp Year:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
# Display the plot
p2
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=0, lwd.ticks = 1)
matplot(1:365, cbind(polska_dlugosc_dnia$daylight_duration..s., svalbard_dl_dnia, olso_dl_dnia, lofoten_dl_dnia), type="l", col=c("#B43757", "#29AB87", "#6AAFc9", "#FFCC66"), lty=1,
xlab="Miesiąc", ylab="Długość dnia [s]", xaxt="n", lwd = 2)
plot.new()
matplot(1:365, cbind(polska_dlugosc_dnia$daylight_duration..s., svalbard_dl_dnia, olso_dl_dnia, lofoten_dl_dnia), type="l", col=c("#B43757", "#29AB87", "#6AAFc9", "#FFCC66"), lty=1,
xlab="Miesiąc", ylab="Długość dnia [s]", xaxt="n", lwd = 2)
months <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
month_midpoints <- cumsum(months) - months / 2
axis(1, at=month_midpoints, labels=month.abb, line=-0.25, lwd=0, lwd.ticks = 1)
legend("bottom", c("Polska", "Svalbard", "Olso", "Lofoty"),
lty=1, col=c("#B43757","#29AB87", "#6AAFc9", "#FFCC66"), lwd = 2, bg="#F9F6D2")
d_polarne <- dni_polarne$ilosc
names(d_polarne) <- dni_polarne$city
plot.new()
barplot(d_polarne, col = "#FAB9FA", ylim = c(0,max(d_polarne)*1.2))
n_polarne <- noce_polarne$ilosc
n_polarne <- c("Bodo" = 0, n_polarne)
names(n_polarne)[c(2:6)] <- noce_polarne$city
barplot(n_polarne, col = adjustcolor("#B779B7", alpha.f = 0.5), add = TRUE)
legend("topright", c("dni polarne", "noce polarne"), pch = 16, pt.cex = 2, col=c("#FAB9FA","#B779B7"), bg="#F9F6D2")
# Dodanie wartości na słupkach
text(x = barplot(d_polarne, plot=FALSE), y = d_polarne, label = d_polarne, pos = 3, cex = 0.8, col = "black")
text(x = barplot(n_polarne, plot=FALSE), y = n_polarne, label = n_polarne, pos = 3, cex = 0.8, col = "black")
#ok!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11
p2 <- plot_ly(data = pogodaIndeks,
y = ~mean_temp_year,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>Mean Temp Year:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
# Display the plot
p2
shinyApp(ui, server)
p2 <- plot_ly(data = pogodaIndeks,
y = ~mean_temp_year,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>Mean Temp Year:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
p2  # Zwrócenie wykresu
p2 <- plot_ly(data = pogodaIndeks,
y = ~mean_temp_year,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>Mean Temp Year:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
p2  # Zwrócenie wykresu
shinyApp(ui, server)
runApp('aplikcja1/wykres1.R')
shinyApp(ui, server)
runApp('aplikcja1/wykres1.R')
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Scatter Plot with Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year") +
theme_minimal()
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black") +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year") +
theme_minimal()
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black") +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year") +
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
labs(x = "Srednia Emigracja (log scale)", y = "Mean Temperature Year", color = "Continents", shape = "Continents") +
theme_minimal()
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black") +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year") +
ggplot(migracje_pogodowe, aes(x = srednia_emigracja, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
labs(x = "Srednia Emigracja (log scale)", y = "Mean Temperature Year", color = "Continents", shape = "Continents") +
theme_minimal()
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black") +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 1) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.1) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
correlation <- cor(pogodaIndeks$LadderScore, pogodaIndeks$mean_temp_year)
correlation
?correlation
?cor
# histogram with added parameters
hist(migracje_pogodowe$mean_temp_year,
main="Histogram",
xlab="Srednia temperatura",
col="darkmagenta",
freq=FALSE,
)
migracje_pogodowe11 <- migracje_pogodowe %>%
group_by(mean_temp_category) %>%
summarise(ilosc_ludzi = sum(srednia_emigracja)) %>% as.data.frame()
barplot(migracje_pogodowe11$mean_temp_category, col = "red")
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi)) +
geom_bar(stat = "identity") +
labs(title = "Barplot of People Count by Mean Temperature Category",
x = "Mean Temperature Category (°C)",
y = "People Count") +
theme_minimal()
barplot(height = migracje_pogodowe$srednia_emigracja,
names.arg = migracje_pogodowe$mean_temp_category,
xlab = "Przedziały temperatur",
ylab = "Ilość osób emigrujących",
main = "Histogram przedziałów temperatur vs ilość osób emigrujących",
col = "lightblue", border = "black", space = 0.5)
histogram <- ggplot(data = migracje_pogodowe, aes(x = mean_temp_year, y = srednia_emigracja)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7, width = 2) +  # Wyświetlenie słupków
labs(x = "Średnia temperatura", y = "Ilość osób emigrujących",  # Nadanie etykiet osiom
title = "Histogram średniej temperatury vs ilość osób emigrujących")  # Nadanie tytułu wykresowi
histogram
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
correlation <- cor(pogodaIndeks$LadderScore, pogodaIndeks$mean_temp_year)
#ok!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11
p2 <- plot_ly(data = pogodaIndeks,
y = ~mean_temp_year,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>Mean Temp Year:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
# Display the plot
p2
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi)) +
geom_bar(stat = "identity") +
labs(title = "Barplot of People Count by Mean Temperature Category",
x = "Mean Temperature Category (°C)",
y = "People Count") +
theme_minimal()
#ok!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11
p2 <- plot_ly(data = pogodaIndeks,
y = ~mean_temp_year,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>Mean Temp Year:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
# Display the plot
p2
runApp('aplikcja1/wykres1.R')
rsconnect::deployApp("C:\\Users\\Kasia\\Desktop\\PDU\\PracaDomowa2\\aplikcja1")
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
correlation <- cor(pogodaIndeks$LadderScore, pogodaIndeks$mean_temp_year)
library(ggplot2)
library(plotly)
# krzywa naj dopasowania
ggplot(pogodaIndeks, aes(x = LadderScore, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "LadderScore",
y = "Mean Temp Year")
correlation <- cor(pogodaIndeks$LadderScore, pogodaIndeks$mean_temp_year)
correlation
#ok!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11
p2 <- plot_ly(data = pogodaIndeks,
y = ~mean_temp_year,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>Mean Temp Year:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
# Display the plot
p2
source("~/.active-rstudio-document", echo=TRUE)
write.csv(pogodaIndeks, "C:\Users\Kasia\Desktop\PDU\PracaDomowa2\aplikcja1\pogodaIndeks")
write.csv(pogodaIndeks, "C:\\Users\\Kasia\\Desktop\\PDU\\PracaDomowa2\\aplikcja1\\pogodaIndeks")
pogodaIndeksShiny <- read.csv("pogodaIndeks.csv")
pogodaIndeksShiny <- read.csv("pogodaIndeks.plik")
pogodaIndeksShiny <- read.csv("pogodaIndeks")
pogodaIndeksShiny <- read.csv("C:\\Users\\Kasia\\Desktop\\PDU\\PracaDomowa2\\aplikcja1\\pogodaIndeks")
pogodaIndeks
pogodaIndeksShiny
runApp('aplikcja1/wykres1.R')
runApp('aplikcja1/wykres1.R')
runApp('aplikcja1/wykres1.R')
library(shiny); runApp('shineBrightLikeADimond.R')
runApp('aplikcja1/wykres1.R')
runApp('aplikcja1/indeksWykresyShiny.R')
library(shiny); runApp('aplikcja1/indeksWykresyShiny.R')
runApp('aplikcja1/indeksWykresyShiny.R')
runApp('aplikcja1/indeksWykresyShiny.R')
library(shiny); runApp('aplikcja1/indeksWykresyShiny.R')
names(pogodaIndeksShiny)
runApp('aplikcja1/indeksWykresyShiny.R')
runApp('aplikcja1/indeksWykresyShiny.R')
pogodaIndeks
runApp('aplikcja1/indeksWykresyShiny.R')
