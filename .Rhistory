labs(title = "ZALEŻNOŚĆ ŚREDNIEJ LICZBY EMIGRANTÓW OD TEMPERATURY",
x = "Średnia liczba emigrantów (skala logarytmiczna)",
y = "Średnia roczna temperatura",
color = "Continents",
shape = "Continents") +
theme(plot.title = element_text(hjust = 0.5))
#log migracje
ggplot(migracje_pogodowe, aes(y = srednia_emigracja, x = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
labs(title = "ZALEŻNOŚĆ ŚREDNIEJ LICZBY EMIGRANTÓW OD TEMPERATURY",
y = "Średnia liczba emigrantów (skala logarytmiczna)",
x = "Średnia roczna temperatura",
color = "Continents",
shape = "Continents") +
theme(plot.title = element_text(hjust = 0.5))
#log migracje
ggplot(migracje_pogodowe, aes(y = srednia_emigracja, x = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_y_log10() +
labs(title = "ZALEŻNOŚĆ ŚREDNIEJ LICZBY EMIGRANTÓW OD TEMPERATURY",
y = "Średnia liczba emigrantów (skala logarytmiczna)",
x = "Średnia roczna temperatura",
color = "Continents",
shape = "Continents") +
theme(plot.title = element_text(hjust = 0.5))
correlation <- cor(migracje_pogodowe$srednia_emigracja, migracje_pogodowe$mean_temp_year)
correlation
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi_emi)) +
geom_bar(stat = "identity") +
labs(title = "ZALEŻNOŚĆ ILOŚCI EMIGRANTÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "średnia temperatura w ciągu roku",
y = "Ilość emigrantów")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi_emi)) +
geom_bar(stat = "identity") +
labs(title = "ZALEŻNOŚĆ ILOŚCI EMIGRANTÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "średnia rocza temperatura",
y = "Ilość emigrantów")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi_emi)) +
geom_bar(stat = "identity", fill = "saddlebrown") +
labs(title = "ZALEŻNOŚĆ ILOŚCI EMIGRANTÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "Średnia roczna temperatura",
y = "Ilość emigrantów") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi_emi)) +
geom_bar(stat = "identity", fill = "#584B0C") +
labs(title = "ZALEŻNOŚĆ ILOŚCI EMIGRANTÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "Średnia roczna temperatura",
y = "Ilość emigrantów") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi_emi)) +
geom_bar(stat = "identity", fill = "#4d2f02") +
labs(title = "ZALEŻNOŚĆ ILOŚCI EMIGRANTÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "Średnia roczna temperatura",
y = "Ilość emigrantów") +
theme(plot.title = element_text(hjust = 0.5))
# wykres na 1000 ludzi
ggplot(migracje_pogodowe, aes(x = mean_temp_category, y = emigracje_per_1000)) +
geom_bar(stat = "identity", fill = "#4d2f02") +
labs(title = "ZALEŻNOŚĆ ILOŚCI EMIGRANTÓW NA 1000 MIESZKAŃCÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "średnia roczna temperatura",
y = "Ilość emigrantów na 1000 mieszkańców") +
theme_minimal()
# wykres na 1000 ludzi
ggplot(migracje_pogodowe, aes(x = mean_temp_category, y = emigracje_per_1000)) +
geom_bar(stat = "identity", fill = "#4d2f02") +
labs(title = "ZALEŻNOŚĆ ILOŚCI EMIGRANTÓW NA 1000 MIESZKAŃCÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "średnia roczna temperatura",
y = "Ilość emigrantów na 1000 mieszkańców")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(migracje_pogodowe11, aes(x = mean_temp_category, y = ilosc_ludzi_emi)) +
geom_bar(stat = "identity", fill = "#4d2f02") +
labs(title = "ZALEŻNOŚĆ LICZBY EMIGRANTÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "Średnia roczna temperatura",
y = "Liczba emigrantów") +
theme(plot.title = element_text(hjust = 0.5))
# wykres na 1000 ludzi
ggplot(migracje_pogodowe, aes(x = mean_temp_category, y = emigracje_per_1000)) +
geom_bar(stat = "identity", fill = "#4d2f02") +
labs(title = "ZALEŻNOŚĆ LICZBY EMIGRANTÓW NA 1000 MIESZKAŃCÓW OD TEMPERATURY W KRAJU DOCELOWYM",
x = "średnia roczna temperatura",
y = "Liczba emigrantów na 1000 mieszkańców")+
theme(plot.title = element_text(hjust = 0.5))
library(shiny)
library(plotly)
library(ggplot2)
pogodaIndeksShiny <- read.csv("C:\\Users\\Kasia\\Desktop\\PDU\\PracaDomowa2\\aplikcja1\\pogodaIndeks")
pogodaIndeksShiny
choices <- setNames(names(pogodaIndeksShiny),
c("X", "Id kraju", "Nazwa kraju",
"Średnia roczna temperatura", "Średnia temperatura w najcieplejszym miesiącu", "Średnia temperatura w najzminiejszym miesiącu",
"Największa różnica temperatur", "Maksymalna temperatura", "Minimalna temperatura",
"Roczna suma opadów", "Średnia długość dnia", "Średnia ilość godzin słonecznych",
"Współczynnik szczęścia", "Kontynent"))
filtered_choices <- choices[c(4,5,6,7,8,9,10,12)]
ui <- fluidPage(
tags$head(tags$style(HTML("
#title {
text-align: center;
}
"))),
div(id = "title", titlePanel("ZALEŻNOŚĆ POGODY OD WSPÓŁCZYNNIKA SZCZĘŚCIA")),
br(),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "yvar",
label = "Wybierz wartość na osi Y:",
#choices = names(pogodaIndeksShiny),
choices = filtered_choices, #numery ktore chcemy:
selected = "mean_temp_year"
),
#textOutput("correlation_text")
htmlOutput("correlation_text")
),
mainPanel(
plotlyOutput("wykres")
)
)
)
server <- function(input, output) {
output$wykres <- renderPlotly({
yvar_label <- names(filtered_choices)[filtered_choices == input$yvar]
p2 <- plot_ly(data = pogodaIndeksShiny,
x = as.formula(paste0("~`", input$yvar, "`")),
y = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>', input$yvar, ':', round(get(input$yvar), digits = 2)),
hoverinfo = 'text') %>%
layout(
xaxis = list(title = yvar_label),
yaxis = list(title = 'Indeks szczęścia'),
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
p2  # Zwrócenie wykresu
})
output$correlation_text <- renderText({
yvar_data <- pogodaIndeksShiny[[input$yvar]]
cor_value <- cor(pogodaIndeksShiny$LadderScore, yvar_data, use = "complete.obs")
#paste("Współczynnik korelacji między LadderScore a", input$yvar, "wynosi:", round(cor_value, 2))
cor_strength <- ifelse(abs(cor_value) < 0.2, "nikła",
ifelse(abs(cor_value) < 0.4, "niska",
ifelse(abs(cor_value) < 0.6, "umiarkowana",
ifelse(abs(cor_value) < 0.8, "wysoka", "bardzo wysoka"))))
HTML(paste("<div style='font-size: 18px; font-weight: bold; color: #2C3E50;'>",
"Współczynnik korelacji wynosi:", round(cor_value, 2),
"<br> Siła korelacji: <span style='color:#E74C3C;'>", cor_strength, "</span>",
"</div>"))
})
}
shinyApp(ui, server)
library(shiny)
library(plotly)
library(ggplot2)
pogodaIndeksShiny <- read.csv("C:\\Users\\Kasia\\Desktop\\PDU\\PracaDomowa2\\aplikcja1\\pogodaIndeks")
pogodaIndeksShiny
choices <- setNames(names(pogodaIndeksShiny),
c("X", "Id kraju", "Nazwa kraju",
"Średnia roczna temperatura", "Średnia temperatura w najcieplejszym miesiącu", "Średnia temperatura w najzminiejszym miesiącu",
"Największa różnica temperatur", "Maksymalna temperatura", "Minimalna temperatura",
"Roczna suma opadów", "Średnia długość dnia", "Średnia ilość godzin słonecznych",
"Współczynnik szczęścia", "Kontynent"))
filtered_choices <- choices[c(4,5,6,7,8,9,10,12)]
ui <- fluidPage(
tags$head(tags$style(HTML("
#title {
text-align: center;
}
"))),
div(id = "title", titlePanel("ZALEŻNOŚĆ INDEKSU SZCZĘŚCIA OD POGODY")),
br(),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "yvar",
label = "Wybierz wartość na osi Y:",
#choices = names(pogodaIndeksShiny),
choices = filtered_choices, #numery ktore chcemy:
selected = "mean_temp_year"
),
#textOutput("correlation_text")
htmlOutput("correlation_text")
),
mainPanel(
plotlyOutput("wykres")
)
)
)
server <- function(input, output) {
output$wykres <- renderPlotly({
yvar_label <- names(filtered_choices)[filtered_choices == input$yvar]
p2 <- plot_ly(data = pogodaIndeksShiny,
x = as.formula(paste0("~`", input$yvar, "`")),
y = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>', input$yvar, ':', round(get(input$yvar), digits = 2)),
hoverinfo = 'text') %>%
layout(
xaxis = list(title = yvar_label),
yaxis = list(title = 'Indeks szczęścia'),
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
p2  # Zwrócenie wykresu
})
output$correlation_text <- renderText({
yvar_data <- pogodaIndeksShiny[[input$yvar]]
cor_value <- cor(pogodaIndeksShiny$LadderScore, yvar_data, use = "complete.obs")
#paste("Współczynnik korelacji między LadderScore a", input$yvar, "wynosi:", round(cor_value, 2))
cor_strength <- ifelse(abs(cor_value) < 0.2, "nikła",
ifelse(abs(cor_value) < 0.4, "niska",
ifelse(abs(cor_value) < 0.6, "umiarkowana",
ifelse(abs(cor_value) < 0.8, "wysoka", "bardzo wysoka"))))
HTML(paste("<div style='font-size: 18px; font-weight: bold; color: #2C3E50;'>",
"Współczynnik korelacji wynosi:", round(cor_value, 2),
"<br> Siła korelacji: <span style='color:#E74C3C;'>", cor_strength, "</span>",
"</div>"))
})
}
shinyApp(ui, server)
ggplot(pogodaIndeks, aes(y = LadderScore, x = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "ZALEŻNOŚĆ INDEKSU SZCZĘŚCIA OD TEMPERATURY",
y = "Indeks szczęścia",
x = "Srednia roczna temperatura")+
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
group_by(CountryName) %>%
summarise(mean_tourists_sum = mean(c(X2014, X2015,X2016, X2017, X2018, X2019), na.rm = TRUE)) %>%
as.data.frame()
turystyka <- na.omit(turystyka)
turysci <- turystyka %>%
inner_join(pogodaIndeks, by = c("CountryName" = "country_name"))
turysci
#########################################################################################
test <- pogodaIndeks %>%
mutate(temprain = mean_temp_year + year_mean_sunshine_duration)
test
plot_ly(data = test,
y = ~temprain,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>temprain:', round(temprain, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'test'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
correlation <- cor(test$LadderScore, test$temprain)
correlation
#########################################################################
ggplot(turysci, aes(x = mean_tourists_sum, y = mean_temp_year, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "Mean tourists sum in a year",
y = "Mean Temp Year")
correlation <- cor(turysci$mean_tourists_sum, turysci$mean_temp_year, method = "spearman")
correlation
correlation1 <- cor(turysci$mean_tourists_sum, turysci$mean_temp_year)
correlation1
ggplot(turysci, aes(x = mean_tourists_sum, y = year_mean_sunshine_duration, color = Continents, shape = Continents)) +
geom_point() +
scale_x_log10() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE, color = "black", lwd = 0.2) +
labs(title = "Scatter Plot with One Best Fit Line",
x = "Mean tourists sum in a year",
y = "Mean sunshine")
correlation <- cor(turysci$mean_tourists_sum, turysci$year_mean_sunshine_duration, method = "spearman")
correlation
correlation1 <- cor(turysci$mean_tourists_sum, turysci$year_mean_sunshine_duration)
correlation1
download.packages(ggplot)
download.packages(plotly)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
group_by(CountryName) %>%
summarise(mean_tourists_sum = mean(c(X2014, X2015,X2016, X2017, X2018, X2019), na.rm = TRUE)) %>%
as.data.frame()
library(dplyr)
library(ggplot2)
turystyka <- read.csv("turystyka.csv", row.names = NULL)
turystyka <- turystyka[ ,c("CountryName", "X2014", "X2015", "X2016", "X2017", "X2018", "X2019")]
turystyka <- turystyka %>%
group_by(CountryName) %>%
summarise(mean_tourists_sum = mean(c(X2014, X2015,X2016, X2017, X2018, X2019), na.rm = TRUE)) %>%
as.data.frame()
turystyka <- na.omit(turystyka)
turysci <- turystyka %>%
inner_join(pogodaIndeks, by = c("CountryName" = "country_name"))
turysci
#########################################################################################
test <- pogodaIndeks %>%
mutate(temprain = mean_temp_year + year_mean_sunshine_duration)
test
plot_ly(data = test,
y = ~temprain,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>temprain:', round(temprain, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'test'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
install.packages("config")
library("config")
#########################################################################################
test <- pogodaIndeks %>%
mutate(temprain = mean_temp_year + year_mean_sunshine_duration)
test
plot_ly(data = test,
y = ~temprain,
x = ~LadderScore,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', country_name, '<br>LadderScore:', round(LadderScore, digits = 2), '<br>temprain:', round(temprain, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'test'),
xaxis = list(title = 'LadderScore'),
title = 'Scatter Plot of LadderScore vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
library(config)
plot_ly(data = turysci,
y = ~mean_temp_year,
x = ~mean_tourists_sum,
type = 'scatter',
mode = 'markers',
color = ~Continents,
text = ~paste('Kraj:', CountryName, '<br>Mean tourists sum in a year:',mean_tourists_sum , '<br>Mean temp:', round(mean_temp_year, digits = 2)),
hoverinfo = 'text') %>%
layout(
yaxis = list(title = 'Mean Temp Year'),
xaxis = list(title = 'tourist', type = "log"),
title = 'Scatter Plot of tourists vs Mean Temp Year by Continents',
width = 750,
height = 590
) %>%
config(
displayModeBar = TRUE,
responsive = TRUE
)
########################
data <- data.frame(
Country = c("Country A", "Country B", "Country C", "Country D", "Country E"),
Tourists = c(5000000, 3000000, 10000000, 7000000, 2000000),
HappinessIndex = c(7.8, 6.5, 7.2, 8.1, 5.9),
AvgTemp = c(15.5, 20.1, 10.3, 18.7, 25.0)
)
ggplot(data, aes(x = HappinessIndex, y = AvgTemp, size = Tourists, label = Country)) +
geom_point(alpha = 0.5, color = "blue") +
geom_text(vjust = 1.5, color = "black", size = 3) +
scale_size_continuous(range = c(3, 15), name = "Tourists") +
labs(
title = "Bubble Chart of Tourist Numbers by Happiness Index and Average Temperature",
x = "Happiness Index",
y = "Average Annual Temperature (°C)"
) +
theme_minimal()
View(turysci)
View(turystyka)
View(turysci)
########################
# data <- data.frame(
#   Country = c("Country A", "Country B", "Country C", "Country D", "Country E"),
#   Tourists = c(5000000, 3000000, 10000000, 7000000, 2000000),
#   HappinessIndex = c(7.8, 6.5, 7.2, 8.1, 5.9),
#   AvgTemp = c(15.5, 20.1, 10.3, 18.7, 25.0)
# )
ggplot(turysci, aes(x = LadderScore, y = mean_temp_year, size = mean_tourists_sum, label = CountryName)) +
geom_point(alpha = 0.5, color = "blue") +
geom_text(vjust = 1.5, color = "black", size = 3) +
scale_size_continuous(range = c(3, 15), name = "Tourists") +
labs(
title = "Bubble Chart of Tourist Numbers by Happiness Index and Average Temperature",
x = "Happiness Index",
y = "Average Annual Temperature (°C)"
) +
theme_minimal()
########################
# data <- data.frame(
#   Country = c("Country A", "Country B", "Country C", "Country D", "Country E"),
#   Tourists = c(5000000, 3000000, 10000000, 7000000, 2000000),
#   HappinessIndex = c(7.8, 6.5, 7.2, 8.1, 5.9),
#   AvgTemp = c(15.5, 20.1, 10.3, 18.7, 25.0)
# )
ggplot(turysci, aes(x = LadderScore, y = mean_temp_year, size = mean_tourists_sum)) +
geom_point(alpha = 0.5, color = "blue") +
geom_text(vjust = 1.5, color = "black", size = 3) +
scale_size_continuous(range = c(3, 15), name = "Tourists") +
labs(
title = "Bubble Chart of Tourist Numbers by Happiness Index and Average Temperature",
x = "Happiness Index",
y = "Average Annual Temperature (°C)"
) +
theme_minimal()
p <- ggplot(turysci, aes(x = LadderScore, y = mean_temp_year, size = mean_tourists_sum, text = CountryName)) +
geom_point(alpha = 0.5, color = "blue") +
scale_size_continuous(range = c(3, 15), name = "Tourists") +
labs(
title = "Bubble Chart of Tourist Numbers by Happiness Index and Average Temperature",
x = "Happiness Index",
y = "Average Annual Temperature (°C)"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
p <- ggplot(turysci, aes(x = LadderScore, y = mean_temp_year, size = mean_tourists_sum, text = CountryName)) +
geom_point(alpha = 0.5, color = "blue") +
scale_size_continuous(range = c(3, 15), name = "Tourists") +
labs(
title = "Bubble Chart of Tourist Numbers by Happiness Index and Average Temperature",
x = "Happiness Index",
y = "Average Annual Temperature (°C)"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
########################
# wykres bąbelkowy
p <- ggplot(turysci, aes(x = LadderScore, y = mean_temp_year, size = mean_tourists_sum, text = CountryName)) +
geom_point(alpha = 0.5, color = "blue") +
scale_size_continuous(range = c(3, 15), name = "Tourists") +
labs(
title = "ZALEŻNOŚĆ ILOŚCI TURYSTÓW OD INDEKTU SZCZĘŚCIA I TEMPERARYRY",
x = "Indeks szczęścia",
y = "Srednia roczna temperatura"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
source("C:/Users/zawol/Documents/PDU/Projekt2/projekt2/turystyka.R", echo=TRUE)
source("C:/Users/zawol/Documents/PDU/Projekt2/projekt2/turystyka.R")
source("C:/Users/zawol/Documents/PDU/Projekt2/projekt2/turystyka.R")
source("C:/Users/zawol/Documents/PDU/Projekt2/projekt2/turystyka.R")
########################
# wykres bąbelkowy
p <- ggplot(turysci, aes(x = LadderScore, y = mean_temp_year, size = mean_tourists_sum, text = CountryName)) +
geom_point(alpha = 0.5, color = "blue") +
scale_size_continuous(range = c(3, 15), name = "Tourists") +
labs(
title = "ZALEŻNOŚĆ ILOŚCI TURYSTÓW OD INDEKTU SZCZĘŚCIA I TEMPERATURY",
x = "Indeks szczęścia",
y = "Średnia roczna temperatura"
) +
theme_minimal()
ggplotly(p, tooltip = "text")
########################
# wykres bąbelkowy
p <- ggplot(turysci, aes(x = LadderScore, y = mean_temp_year, size = mean_tourists_sum, text = CountryName)) +
geom_point(alpha = 0.5, color = "blue") +
scale_size_continuous(range = c(3, 15), name = "Tourists") +
labs(
title = "ZALEŻNOŚĆ ILOŚCI TURYSTÓW OD INDEKSU SZCZĘŚCIA I TEMPERATURY",
x = "Indeks szczęścia",
y = "Średnia roczna temperatura"
) +
theme_minimal()
source("C:/Users/zawol/Documents/PDU/Projekt2/projekt2/turystyka.R")
